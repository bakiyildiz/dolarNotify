/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dolarnotify;

import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author Baki
 */
public class DolarNotifyIndex extends javax.swing.JFrame {

    /**
     * Creates new form DolarNotifyIndex
     */
    public DolarNotifyIndex() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Kontrole Kalan: ");

        jLabel2.setText("Güncel Dolar: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addContainerGap(194, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addComponent(jLabel2)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    double eskiDeger = 0;
    double yeniDeger = 0;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        Timer timer = new Timer();        
        TimerTask task = new TimerTask(){
            int timer = 60;
            public void run(){
                try {
                    if((getConfigData("appSettings", "autoRun")).equals("0")){
                        System.exit(0);
                    }
                } catch (Exception e) {
                }
                timer--;
                if(timer==0){
                    timer=60;                    
                    kontrol();
                }
                jLabel1.setText("Kontrole Kalan: " + timer);
                jLabel2.setText("Güncel Dolar: " + eskiDeger);
            }
        };
        
        timer.schedule(task, 0, 1000);
    }//GEN-LAST:event_formWindowOpened
    
    public void kontrol(){
        try {
            yeniDeger = veriCek();
            if(eskiDeger == 0){
                eskiDeger = ((yeniDeger*100) %2 == 0) ? yeniDeger : 0;
            }else{
                if(eskiDeger != yeniDeger && yeniDeger != 0){
                    DateFormat dateFormatFull = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                    Date date = new Date();
                    double kontrol = (eskiDeger*100)-(yeniDeger*100);
                    if(kontrol >= 2){
                        try {
                            Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar mail DolarNotify Dolar'ın değeri düştü.\n\nEski değer: " + eskiDeger +  ", yeni değer: " + yeniDeger + " - " + dateFormatFull.format(date));
                        } catch (Exception e) {
                        }
                        eskiDeger = yeniDeger;
                    }else if(kontrol <= -2){
                        try {
                            Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar mail DolarNotify Dolar'ın değeri yükseldi.\n\nEski değer: " + eskiDeger + ", yeni değer: " + yeniDeger +  " - " + dateFormatFull.format(date));
                        } catch (Exception e) {
                        }
                        eskiDeger = yeniDeger;
                    }                    
                }
            }            
            
        } catch (Exception e) {
            try {
                Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception DolarNotifyIndex EX_1 " + e);
            } catch (Exception ex) {
            }
        }        
    }
    
    public double veriCek() {
        try {
            Document doc = Jsoup.connect("https://investing.com/currencies/usd-try").userAgent("mozilla/17.0").get();
            Element elementByID = doc.getElementById("last_last");
            String stringDeger = elementByID.text();
            stringDeger = stringDeger.substring(0,stringDeger.length()-2);
            return Double.valueOf(stringDeger);
        } catch (IOException e) {
            return 0;
        }        
    }   
    
    public static String getConfigData(String tagName, String configName){
        String strXmlDate = null;
		
        try {
            File inputFile = new File("../config/config.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            org.w3c.dom.Document doc = dBuilder.parse(inputFile);
            doc.getDocumentElement().normalize();
            NodeList nList = doc.getElementsByTagName(tagName);

            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                   org.w3c.dom.Element eElement = (org.w3c.dom.Element) nNode;
                   strXmlDate = eElement.getElementsByTagName(configName).item(0).getTextContent();
                }
            }
        } catch (Exception e) {
            try {
                Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception DolarNotifyIndex EX_2 " + e);
            } catch (Exception ex) {          
            }
        }

        return strXmlDate;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DolarNotifyIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DolarNotifyIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DolarNotifyIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DolarNotifyIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DolarNotifyIndex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
